@using Zugether.DTO
@using Newtonsoft.Json
@model RoomViewModel
@await Html.PartialAsync("_PartialSearch")
@await Html.PartialAsync("_PartialGoTop")
<style>

	/* 沒有的房間設備 */
	.noDevice {
		color: gray;
		text-decoration: line-through;
	}

	/*google font*/
	.material-symbols-outlined {
		font-size: 20px;
		margin-bottom: 5px;
	}

	@@media (max-width: 768px) {
		.material-symbols-outlined {
			font-size: 18px !important;
		}

		.message-content, .reply, .edit-text, .messageTime {
			font-size: 16px !important;
		}
	}
	/*留言區會員姓名*/
	.member-name {
		white-space: nowrap;
		display: inline-block;
		color: #0066CC;
		font-weight: bold;
	}

		.member-name:hover {
			text-decoration: underline;
			cursor: pointer;
		}
	/*回覆者姓名*/
	.reply-member-name {
		color: red;
		white-space: nowrap;
		font-weight: bold;
	}

	#reply-member-name:hover {
		text-decoration: underline;
		cursor: pointer;
	}

	/* 留言區頭貼 */
	.user-shot {
		height: 60px;
		width: 60px;
		margin: 0;
		padding: 0;
	}

	#user-shot:hover {
		cursor: pointer;
		/* transform: scale(2) translateX(10px) translateY(10px);
									/* 添加平滑過渡效果 */
		/* transition: transform 0.3s ease; */
	}
	/* 訊息區 */
	.messageBubble {
		background: #FFE6D9;
		box-shadow: 5px 5px 5px #9D9D9D;
		/* 水平偏移、垂直偏移、模糊半徑、顏色 */
		padding: 5px !important;
		margin: 0 !important;
	}
	/* 回覆 */
	.reply {
		margin: 0;
		color: #BB5500;
	}

		.reply:hover {
			color: blue;
			text-decoration: underline;
			/* 變更游標為手指 */
			cursor: pointer;
		}

	.edit-text {
		color: #BB5500;
	}

		.edit-text:hover {
			color: blue;
			text-decoration: underline;
			cursor: pointer;
		}

	/* 訊息內容，允許換行 */
	.message-content {
		display: flex;
		flex-wrap: wrap;
		display: inline;
		white-space: normal;
	}
	/* 留言第一列 */
	.message-title {
		margin: 0px !important;
		padding: 0px !important;
		align-items: start;
	}

	.button-style {
		display: inline-block;
		padding: 6.75px 13.5px;
		border: none;
		border-radius: 5px;
		cursor: pointer;
		text-align: center;
		transition: all 0.3s ease;
	}

		.button-style:hover {
			background-color: #D9B300 !important;
			transform: translateY(-2px);
		}

	#send {
		width: 80px;
	}

		#send:hover {
			background-color: #D9B300 !important;
		}
	/* 發布者資訊 */
	.promulgator-title {
		font-weight: bold;
	}
</style>

<section class="room-area">
	<div class="container">
		<div class="mb-3">
			<button class="btn btn-primary  me-2 mt-3 " id="return-btn">
				<span class="material-symbols-outlined arrow-back">
					arrow_back
				</span>上一頁
			</button>
		</div>
		<!-- 圖片幻燈片 -->
		@if (Model.roomImages != null && Model.roomImages.Any())
		{
			<div class="carousel-container">
				<div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
					<div class="carousel-inner">
						@for (int i = 0; i < Model.roomImages.Count; i++)
						{
							var image = Model.roomImages[i];
							if (image.room_photo != null)
							{
								string imageBase64 = Convert.ToBase64String(image.room_photo);
								// 從資料庫讀取 photo類型
								string imageSrc = $"data:{image.photo_type};base64,{imageBase64}";
								<div class="carousel-item @(i == 0 ? "active" : "")">
									<img src="@imageSrc" class="d-block w-100" alt="Room image" loading="lazy">
								</div>
							}
						}
					</div>
					<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls"
							data-bs-slide="prev">
						<span class="carousel-control-prev-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Previous</span>
					</button>
					<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls"
							data-bs-slide="next">
						<span class="carousel-control-next-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Next</span>
					</button>
				</div>
			</div>
		}
		else
		{
			<div class="carousel-container">
				<div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
					<div class="carousel-inner">
						<div class="carousel-item active">
							<img src="~/images/rooms/room1.jpg" class="d-block w-100" alt="..." loading="lazy">
						</div>
						<div class="carousel-item">
							<img src="~/images/rooms/room2.jpg" class="d-block w-100" alt="..." loading="lazy">
						</div>
						<div class="carousel-item">
							<img src="~/images/rooms/room3.jpg" class="d-block w-100" alt="..." loading="lazy">
						</div>
					</div>
					<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls"
							data-bs-slide="prev">
						<span class="carousel-control-prev-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Previous</span>
					</button>
					<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls"
							data-bs-slide="next">
						<span class="carousel-control-next-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Next</span>
					</button>
				</div>
			</div>
		}

		<div class="information-div">
			<h1 class="information-text">房間資訊</h1>
			<hr class="red-hr">
		</div>

		<div class="cardBg">
			<div class="row d-flex p-2">
				<div class="col-md-6 ">
					<div class="mb-2 d-flex align-items-center">
						<strong class="" style="font-size:24px;">@($"{Model.Room?.room_title}")</strong>
					</div>
					<div class="row row-cols-2 row-cols-md-1">
						<div class="mb-2 col-6 col-md-12 align-items-center ">
							<span class="material-symbols-outlined me-2">floor</span>樓層 : @($"{Model.Room?.floor}")樓
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2">night_shelter</span>房型 : @($"{Model.Room?.room_type}")
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2">bed</span>床型 : @($"{Model.Room?.bed_type}")
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2">paid</span>租金 : @($"{Model.Room?.rent}")/月(不含水電及管理費月)
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2">payments</span>押金 : @($"{Model.Room?.deposit}")元
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2">money_bag</span>租金繳交方式 : @($"{Model.Room?.pay_type}")
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2">receipt_long</span>租約型式 : @($"{Model.Room?.lease_type}")
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2">paid</span>管理費 : @($"{Model.Room?.management_fee}")元/月
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2"
								  style="transform: rotate(-45deg);">width</span>房間大小 : @($"{Model.Room?.room_size}")坪
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2">person</span>徵求人數 : 尋求@($"{Model.Room?.roommate_num}")位
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2">location_on</span>地址 : @($"{Model.Room?.address}")
						</div>
						<div class="mb-2 col-6 col-md-12 align-items-center">
							<span class="material-symbols-outlined me-2">work</span>希望室友工作時間(班別) : @($"{Model.Room?.prefer_jobtime}")
						</div>
					</div>

					<div class="mb-2 d-flex align-items-start">
						<span class="material-symbols-outlined me-2">folded_hands</span>理想室友 :
						@($"{Model.Room?.roommate_description}")
					</div>
				</div>
				<div class="col-md-6">
					<!--AIzaSyCgNkI2mdCb-rdHhIP4dECAehv5rE6N_KI-->
					<iframe src="https://www.google.com/maps/embed/v1/place?key=AIzaSyCgNkI2mdCb-rdHhIP4dECAehv5rE6N_KI&q=@Uri.EscapeDataString(Model.Room.address)"
							width="100%" height="450" style="border:0;" allowfullscreen="" loading="lazy"
							referrerpolicy="no-referrer-when-downgrade">
					</iframe>

					@* <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3615.6848374243154!2d121.45607071052987!3d25.010822939132726!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442a81d1e80379b%3A0x6e5b320368af0131!2zMjIw5paw5YyX5biC5p2_5qmL5Y2A5paH5YyW6Lev5LiA5q61MjbomZ8!5e0!3m2!1szh-TW!2stw!4v1729333721367!5m2!1szh-TW!2stw"
					width="100%" height="400" style="border:0;" allowfullscreen="" loading="lazy"
					referrerpolicy="no-referrer-when-downgrade">
					</iframe>*@
				</div>
			</div>
			<hr style="border-style:solid;border-width:1px;border-color:black;">
			@*房間設備*@
			<div class="row d-flex p-2">
				<h3>房間設備</h3>
				<!-- flex-wrap自動換行 -->
				<div class="d-flex flex-wrap" id="room-equipment">
					<!--false=>設定d-none-->
					<div class="d-flex align-items-center px-2 item-space " id="bed">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							bed<span class="room-text">床</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space " id="wardrobe">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							shelves<span class="room-text">衣櫃</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space " id="room_table">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							table_restaurant<span class="room-text">桌子</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space " id="chair">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							chair_alt<span class="room-text">椅子</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space " id="kitchen">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							kitchen<span class="room-text">廚房</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space " id="extinguisher">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							fire_extinguisher<span class="room-text">滅火器</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space" id="tv">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							tv<span class="room-text">電視</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space " id="wifi">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							wifi<span class="room-text">網路</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space" id="monitor">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							assistant_device<span class="room-text">監視器</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space " id="private_washer">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							local_laundry_service<span class="room-text">洗衣機(獨立)</span>
						</span>
					</div>
				</div>
			</div>
			<hr style="border-style:solid;border-width:1px;border-color:black;">
			@*環境公設*@
			<div class="row d-flex p-2">
				<h3>環境公設</h3>
				<!-- flex-wrap自動換行 -->
				<div class="d-flex flex-wrap" id="public-equipment">
					<!--false=>設定d-none-->
					<div class="d-flex align-items-center px-2 item-space " id="balcony">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							balcony<span class="room-text">陽台</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space " id="elevator">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							elevator<span class="room-text">電梯</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space " id="smoking">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							smoking_rooms<span class="room-text">可抽菸</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space me-4" id="keep_pet">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							pets<span class="room-text">可養寵物</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space me-5" id="trash_cart">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							delete<span class="room-text">垃圾子母車</span>
						</span>
					</div>
					<div class="d-flex align-items-center px-2 item-space " id="public_washer">
						<span class="material-symbols-outlined text-success d-flex align-items-center">
							local_laundry_service<span class="room-text">洗衣機(共用)</span>
						</span>
					</div>
				</div>
			</div>
		</div>
		<!-- card結束 -->
		<div class="information-div">
			<h1 class="information-text">發布者資訊</h1>
			<hr class="red-hr">
		</div>
		<div class="cardBg">
			<div class="row d-flex">
				<div class="col-md-4 d-flex justify-content-center align-items-center">
					@{
						if (Model.Member?.avatar != null)
						{
							string imageBase64 = Convert.ToBase64String(Model.Member.avatar);
							string imageSrc = $"data:image/jpeg;base64,{imageBase64}";
							<img src="@imageSrc" alt="Room Image" class="img-fluid rounded-circle "
								 style="height: 200px; width: 200px; object-fit: cover;">
						}
						else
						{
							<img src="~/images/peopleImg.png" alt="Room Image" class="img-fluid rounded-circle "
								 style="height: 200px; width: 200px; object-fit: cover;">
						}
					}
				</div>
				<div class=" col-md-8 ">
					<div class=" card-body">
						<div class="d-flex justify-content-between border-bottom py-1">
							<h4 class="card-title">@Model.Member?.name</h4>
						</div>
						<div class="d-flex mt-3 introduce justify-content-between py-1">
							<p class="w-25 promulgator-title">性別</p>
							<p class="w-75 card-text">@Model.Member?.gender</p>
						</div>
						<div class="d-flex introduce justify-content-between py-1">
							<p class="w-25 promulgator-title">出生日期</p>
							<p class="w-75 card-text">@Model.Member?.birthday</p>
						</div>
						<div class="d-flex introduce justify-content-between py-1">
							<p class="w-25 promulgator-title">連絡電話</p>
							<p class="w-75 card-text">@Model.Member?.phone</p>
						</div>
						<div class="d-flex introduce mt-1">
							<p class="promulgator-title">自我介紹</p>
							<!-- flex-grow: 1 自動填滿 -->
							<hr style=" flex-grow: 1;
                            border-style: solid;
                            border-color:black;
                            border-width: 1px;">
						</div>
						<div class="d-flex introduce">
							<p class="introduce">
								@Model.Member?.introduce
							</p>
						</div>

					</div>
				</div>
			</div>
		</div>
		<!-- card結束 -->
		<div class="information-div">
			<h1 class="information-text">房東資訊</h1>
			<hr class="red-hr">
		</div>
		<div class="cardBg">
			<div class="row d-flex">
				<div class="d-flex justify-content-start py-1">
					<p class="landlord">姓名</p>
					<p class="card-text">@Model.Landlord?.name</p>
				</div>
				<div class="d-flex justify-content-start py-1">
					<p class="landlord">性別</p>
					<p class="card-text">@Model.Landlord?.gender</p>
				</div>
				<div class="d-flex justify-content-start py-1">
					<p class="landlord">連絡電話</p>
					<p class="card-text">@Model.Landlord?.phone</p>
				</div>
			</div>
		</div>
		<!-- card結束 -->

		<div class="information-div">
			<h1 class="information-text">留言板</h1>
			<hr class="red-hr">
		</div>

		<!-- 背景區大小跟隨內容區大小變化 -->
		<div class="messageBackground p-3 w-100" style="height: auto; background-color:	#F0F0F0;">
			<!-- 內容區容器 -->
			<div class="messageArea overflow-auto CustomizedScroll" style="height: auto; max-height: 400px;">
				<!-- 動態生成區 -->
				<!-- 訊息區 -->
				@if (Model.roomMessages != null && Model.roomMessages.Any())
				{
					@foreach (var message in Model.roomMessages)
					{
						<div class="messageItem mb-3 d-flex member-@(message.member_id) ps-3 pe-4" style="">
							@{
								if (message.avatar != null)
								{
									string imageBase64 = Convert.ToBase64String(message.avatar);
									string imageSrc = $"data:image/jpeg;base64,{imageBase64}";
									<img src="@imageSrc" alt="" class="object-cover rounded-circle me-2 user-shot" id="user-shot">
								}
								else
								{
									<img src="~/images/peopleImg.png" alt="" class="object-cover rounded-circle me-2 user-shot" id="user-shot">
								}
							}
							<div class="messageBubble p-2 rounded w-100">
								<div class="message-title">
									<strong class="member-name" id="member-name">
										@message.member_name
									</strong>
									@if (!string.IsNullOrEmpty(message.reply_member_content))
									{
										<strong class="reply-member-name ms-1" id="reply-member-name">
											@(message.reply_member_content)(@message.reply_member_name)
										</strong>
									}
									<span class="message-content ms-2">
										@message.message_content
									</span>
								</div>
								<div class="d-flex align-items-center">
									<span class="reply me-2">回覆</span>
									<span class="d-none edit-text me-2 ">編輯</span>
									<span class="messageTime">@message.post_time?.ToString()</span>
									<strong class="message-basement ms-auto">
										B@(message.message_basement)
									</strong>
								</div>
							</div>
						</div>
					}
				}
				else
				{
					<div class=" mb-2 d-flex" id="No-message">
						<div class=" p-2  w-100 text-center text-muted">目前尚無留言，快來留下您的想法!!</div>
					</div>
				}

			</div>
			<div class="inputArea justify-content-end">
				<div class="input-group ps-2 ">
					<button class="btn btn-secondary d-none " type="button" id="edit-btn">
						確認更改
					</button>
					<button class="btn btn-secondary" type="button" id="send">
						發送
					</button>
					<input type="text" class="form-control" placeholder="請輸入訊息...." id="inputMessage">

				</div>
			</div>
			<div class="mt-2 ms-2 d-none button-style btn-secondary" id="cancel-reply">
				<span class="cancel-reply-text">取消回覆</span>
			</div>
			<div class="mt-2 ms-2 d-none button-style btn-secondary" id="cancel-edit">
				<span class="cancel-reply-text">取消編輯</span>
			</div>
		</div>

		<!-- 留言結束 -->
		<div class="d-flex justify-content-center py-5">
			<button type="button" class="btn btn-danger me-3 " id="add-favorites-btn">加入收藏</button>
			<button type="button" class="btn btn-secondary me-3 d-none" id="remove-favorites-btn">移除收藏</button>
			<button type="button" class="btn btn-primary" id="invite-room-btn"> 合租邀約</button>
		</div>
	</div>

	@*會員彈出modal*@
	<div id="PartialMemberModal"></div>
	@*回覆彈出modal*@
	<div id="PartialReplyModal"></div>
	@*動畫效果*@
	<div id="alert-container"></div>
</section>
<script>
	$(function () {
		var isLogin = @(JsonConvert.SerializeObject(ViewContext.HttpContext.Session.GetString("isLogin") == "true"));
		//抓房間編號
		var roomID = @(Model.Room?.room_id);
		//抓房間標題
		var roomTitle = "@Html.Raw(Model.Room?.room_title)";
		var memberID, memberName, memberEmail;
		if (isLogin) {
			memberID = String(sessionStorage.getItem("memberID"));
			memberName = String(sessionStorage.getItem("memberName"));
			memberEmail = String(sessionStorage.getItem("memberEmail"));
			//檢查房間是否匹配會員編號
			(async () => {
				try {
					const getMemberID = await disableFavoriteAndShareRoom();
					if (getMemberID != memberID) {
						// console.log("匹配失敗");
						return;
					}
					// console.log(`房間編號 "${roomID}" 對應當前登入會員 "${getMemberID}" 匹配成功`);
					$('#add-favorites-btn').addClass('d-none');
					$('#invite-room-btn').addClass('d-none');
				} catch (error) {
					//抓throw error;
					console.error("發生錯誤:", error);
				}
			})();
		}
		console.log("會員 ID:", memberID);
		console.log("會員名稱:", memberName);
		console.log("會員 Email:", memberEmail);

		//檢查收藏
		checkFavoriteRoom();
		//設備
		checkDevice();
		//上一頁
		$('#return-btn').click(function () {
			window.history.back();
			// setTimeout(function () {
			// 	window.location.reload();
			// }, 100);
		});
		// 建立 SignalR 連接
		var connection = new signalR.HubConnectionBuilder()
			.withUrl("/chatHub")
			.withAutomaticReconnect()
			.build();

		// 啟動連接並處理錯誤
		connection.start()
			.then(() => {
				console.log("SignalR 連接已建立", connection.connectionId);
			})
			.catch(err => console.error("SignalR 連接失敗:", err.toString()));
		// 處理連接事件
		connection.onreconnecting((error) => {
			// console.warn("SignalR 正在重新連接...", error);
		});

		connection.onreconnected((connectionId) => {
			// console.log("SignalR 已重新連接。連接ID:", connectionId);
		});
		connection.onclose((error) => {
			// console.error("SignalR 連接已關閉:", error);
		});

		// 發送消息
		$('#send').click(function () {
			if (!isLogin) {
				$('#alert-container').load('/Search/Alert', {
					Color: 'danger',
					AlertText: '請登入會員!!',
					Show: true,
					Time: 1000
				});
			}
			else {
				var userName = sessionStorage.getItem("memberName");
				var memberID = sessionStorage.getItem("memberID");
				console.log("檢查發送留言roomID= ", roomID);
				//接收訊息輸入
				var inputMessage = $('#inputMessage').val().trim();
				if (inputMessage.length <= 0) {
					$('#alert-container').load('/Search/Alert', {
						Color: 'danger',
						AlertText: '請輸入訊息!!',
						Show: true,
						Time: 1000
					});
					return;
				}
				else if (inputMessage.match(/^B\d+\(.+\):/)) {
					const parts = inputMessage.split(":");
					if (parts[1].trim().length <= 0) {
						$('#alert-container').load('/Search/Alert', {
							Color: 'danger',
							AlertText: '請輸入回覆的訊息!!',
							Show: true,
							Time: 1000
						});
						return;
					}
				}
				//透過委派去抓取最新樓層
				let latestBasement = $('.messageArea').find('.message-basement:last').text();
				let latestBasementNumber = 1;
				//如果有
				if (latestBasement) {
					let basementNumber = parseInt(latestBasement.replace(/\D/g, ''));
					//提取到 +1
					if (!isNaN(basementNumber)) {
						latestBasementNumber = basementNumber + 1;
					}
				}
				//沒有樓層輸出B1
				let newBasement = "B" + latestBasementNumber;
				console.log("check最新樓層:", newBasement);
				// 觸發server端事件
				connection.invoke("SendMessage", userName, inputMessage, memberID, newBasement)
					.catch(function (err) {
						return console.error("錯誤", err.toString());
					});
				resetInputMessage();
				$('#cancel-reply').addClass('d-none');
				$('#send').prop('disabled', true);
			}
		});

		// Enter 事件
		$('#inputMessage').keydown(function (e) {
			if (e.key === "Enter") {
				// 阻止預設的換行
				e.preventDefault();
				// 判斷當前觸發事件
				if ($('#send').is(':visible')) {
					$('#send').click();
				}
				else {
					$('#edit-btn').click();
				}
			}
		});

		// 發送留言-Client端
		{
			connection.on("NewMessage", function (user, message, searchMemberIdToAvatar, newBasement) {
				let messageTime = "", replyBasementMemberName = "", messageContent = "", replyName = "", replyBasement = "";
				//分離文本內容
				messageTime = getMessageTime();
				const regex = /^(B\d+)\(([^)]+)\): (.*)$/;
				const match = message.match(regex);
				//匹配格式
				if (match) {
					replyBasementMemberName = match[1] + '( ' + match[2] + ')'; //"B1(老王)"
					replyName = match[2]; // "老王"
					replyBasement = match[1];//"B1"
					messageContent = match[3]; // "test1"
				}
				else {
					messageContent = message;
				}
				console.log("check Client的最新樓層=", newBasement);
				console.log("抓取回覆姓名=", replyName);
				console.log("測試replyBasementMemberName=", replyBasementMemberName);
				console.log("測試messageContent=", messageContent);
				console.log("測試replyBasement=", replyBasement);

				const currentMemberID = String(sessionStorage.getItem("memberID"));
				// console.log("check searchMemberIdToAvatar=", searchMemberIdToAvatar);
				//post留言到資料庫
				//匹配成功才觸發ajax
				if (String(searchMemberIdToAvatar) === currentMemberID) {
					$.ajax({
						url: '@Url.Action("PostMessage", "Search")',
						type: "POST",
						data: {
							roomID: roomID, memberID: memberID, messageTime: messageTime,
							replyMemberContent: replyBasement, messageContent: messageContent, replyName: replyName
						},
						success: function (response) {
							if (response.state) {
								// console.log(`匹配成功，searchMemberIdToAvatar: ${searchMemberIdToAvatar}, memberID: ${currentMemberID}`);
								console.log(response.message, "ajax已執行完畢");
							} else {
								console.error("伺服器回應錯誤:", response.message);
								console.error("詳細錯誤資訊:", response);
							}
						},
						error: function (xhr, status, error) {
							ajaxError(xhr, status, error);
							const response = xhr.responseJSON;
							if (response) {
								console.error("調試資訊:", response.debugInfo || "無調試資訊");
							} else {
								console.error("未預期的錯誤:", xhr.responseText);
							}
						}
					});
				}
				else {
					// console.log(`匹配失敗，searchMemberIdToAvatar: ${searchMemberIdToAvatar}, memberID: ${currentMemberID}`);
					console.log("跳過當前發送留言ajax");
				}

				//抓發送會員的圖片
				let imageSrc = "";
				$.ajax({
					url: '@Url.Action("GetMemberImage", "Search")',
					type: "POST",
					data: { memberID: searchMemberIdToAvatar },
					// 確保接收的是二進制數據
					xhrFields: {
						responseType: "arraybuffer"
					},
					success: function (response) {
						// 處理成功的圖片數據
						const base64String = btoa(
							new Uint8Array(response).reduce((data, byte) => data + String.fromCharCode(byte), "")
						);
						imageSrc = `data:image/jpeg;base64,${base64String}`;
						//檢查二進制數據
						// console.log("圖片來源已更新:", imageSrc);
						//發送留言
						let showEditText = (String(searchMemberIdToAvatar) === currentMemberID);
						console.log("check showEditButton", showEditText);
						var newMessage = `<div class="messageItem mb-3 d-flex member-${searchMemberIdToAvatar} ps-3 pe-4">
																<img src="${imageSrc}" alt="" class="object-cover rounded-circle me-2 user-shot" id="user-shot">
																<div class="messageBubble p-2 rounded w-100">
																<div class="message-title">
																	<strong class="member-name" id="member-name">${user}</strong>
																		${replyBasementMemberName ? `<strong class="reply-member-name ms-1" id="reply-member-name">${replyBasementMemberName} </strong>` : ""}
																	<span class="message-content ms-2">${messageContent}</span>
																</div>
																<div class="d-flex align-items-center">
																	<span class="reply me-2">回覆</span>
																		${showEditText ? `<span class="edit-text me-2">編輯</span>` : ""}
																	<span class="messageTime">${messageTime}</span>
																		 <strong class="message-basement ms-auto">${newBasement}</strong>
																</div>
															</div>
															</div>`;
						$('.messageArea').append(newMessage);
						$('#No-message').remove();
						// console.log("檢查啟用發送按鈕");
						$('#send').prop('disabled', false);
					},
					error: function (xhr, status, error) {
						try {
							//將二進制資料轉換為json
							const response = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(xhr.response)));
							ajaxError(response, xhr, status, error);
						} catch (e) {
							console.error("未預期的伺服器錯誤:", xhr.responseText || xhr.statusText);
						}
					}
				});
				//自動滾動
				var messageArea = $('.messageArea');
				var lastMessage = $('.messageItem').last();
				setTimeout(() => {
					// 計算滾動目標位置
					var scrollTarget = lastMessage.offset().top + messageArea.scrollTop() - messageArea.offset().top + 5000;  // +向下滾動
					messageArea.animate({ scrollTop: scrollTarget }, 500);
				}, 100);
			});
		}

		//回覆
		$('.messageArea').on('click', '.reply', function () {
			if (!isLogin) {
				$('#alert-container').load('/Search/Alert', {
					Color: 'danger',
					AlertText: '請登入會員!!',
					Show: true,
					Time: 1000
				});
			}
			else {
				resetInputMessage();
				$('#cancel-edit').addClass('d-none'); //隱藏取消編輯
				$('#edit-btn').addClass('d-none'); //隱藏確認更改
				$('#send').removeClass('d-none');
				$('#cancel-reply').removeClass('d-none');
				//名字
				const name = $(this).closest('.messageBubble').find('.member-name').text().trim();
				//最新樓層
				const messageBasement = $(this).closest('.messageBubble').find('.message-basement').text().trim();
				var latestBasement = $('.message-basement:last').text();
				// console.log("測試latestBasement= ", latestBasement);
				// console.log("測試name= ", name);
				// console.log("測試messageBasement= ", messageBasement);
				const replyText = `${messageBasement}(${name}): `;
				$('#inputMessage').val(replyText);
				// 將輸入焦點移到輸入框
				$('#inputMessage').focus();
				// 防呆：防止用戶刪除回覆姓名
				$('#inputMessage').on('input', function () {
					const currentText = $(this).val();
					if (!currentText.startsWith(replyText)) {
						$(this).val(replyText);
					}
				});
			}
		});

		//取消回覆
		$('#cancel-reply').click(function () {
			// console.log("取消回覆");
			resetInputMessage();
			$(this).addClass('d-none');


		});

		//比對會員編號(顯示編輯)
		let currentMemberID = `member-${memberID}`;
		$('.messageItem').each(function () {
			if ($(this).hasClass(currentMemberID)) {
				$(this).find('.edit-text').removeClass('d-none');
			}
		});

		{
			//按下編輯
			let messageItem, messageContent = "", replyContent = "", currentBasement = "", inputMessage = "";
			$('.messageArea').on('click', '.edit-text', function () {
				resetInputMessage();
				$('#cancel-reply').addClass('d-none'); //隱藏取消回覆
				messageItem = $(this).closest('.messageItem');
				messageContent = messageItem.find('.message-content').text().trim();
				replyContent = messageItem.find('.reply-member-name').text().trim() || "";
				currentBasement = messageItem.find('.message-basement').text().trim();
				// console.log("提取訊息", replyContent, messageContent, currentBasement);
				$('#edit-btn').removeClass('d-none');
				$('#send').addClass('d-none');
				$('#cancel-edit').removeClass('d-none');
				$('#inputMessage').focus();
				if (replyContent.length > 0) {
					$('#inputMessage').val(`${replyContent} ${messageContent}`);
					$('#inputMessage').on('input', function () {
						const currentText = $(this).val();
						if (!currentText.startsWith(replyContent)) {
							$(this).val(replyContent);
						}
					});
				}
				else {
					$('#inputMessage').val(`${messageContent}`);
				}

			});
			//確認更改
			$('#edit-btn').click(function () {
				inputMessage = $('#inputMessage').val().trim();
				const replyRegex = /^B\d+\(.*\)/;
				//移除回復
				if (replyRegex.test(inputMessage)) {
					inputMessage = inputMessage.replace(replyRegex, "");
				}
				let editMessageTime = getMessageTime();
				// console.log(`inputMessage=${inputMessage} currentBasement=${currentBasement}`);
				connection.invoke("EditMessage", inputMessage, currentBasement, memberID, editMessageTime)
					.catch(function (err) {
						return console.error("錯誤", err.toString());
					});
				resetInputMessage();
				$(this).addClass('d-none');
				$('#send').removeClass('d-none');
				$('#cancel-edit').addClass('d-none');
			});
		}
		{
			//確認更改-Client端
			connection.on("EditMessage", function (inputMessage, currentBasement, currentMemberID, editMessageTime) {
				// console.log(`訊息: ${inputMessage}, 樓層: ${currentBasement}, 會員: ${currentMemberID}, 編輯時間: ${editMessageTime}`);
				const messageItem = $(`.messageItem:has(.message-basement:contains(${currentBasement}))`);
				//修改內容
				messageItem.find('.message-content').text(inputMessage);
				messageItem.find('.messageTime').text(editMessageTime);
				let messageContent = inputMessage.toString();
				// 提取數字
				let basement = currentBasement.substring(1);
				// console.log(`提取的basement=${basement} messageContent=${messageContent}`);
				if (memberID.toString() === currentMemberID.toString()) {
					$.ajax({
						url: '@Url.Action("EditMessageToDB", "Search")',
						type: "POST",
						data: {
							roomID: roomID, memberID: memberID, messageContent: messageContent,
							basement: basement, editMessageTime: editMessageTime
						},
						success: function (response) {
							if (response.state) {
								// console.log(`匹配成功，currentMemberID: ${currentMemberID}, memberID: ${memberID}`);
								console.log(response.message, "ajax已執行完畢");
							} else {
								console.error("伺服器回應錯誤:", response.message);
								console.error("詳細錯誤資訊:", response);
							}
						},
						error: function (xhr, status, error) {
							ajaxError(xhr, status, error);
							const response = xhr.responseJSON;
							if (response) {
								console.error("調試資訊:", response.debugInfo || "無調試資訊");
							} else {
								console.error("未預期的錯誤:", xhr.responseText);
							}
						}
					});
				}
				else {
					// console.log(`匹配失敗，currentMemberID: ${currentMemberID}, memberID: ${memberID}`);
					console.log("跳過當前編輯留言ajax");
				}
			});
		}
		//取消編輯
		$('#cancel-edit').click(function () {
			resetInputMessage();
			$('#edit-btn').addClass('d-none');
			$('#send').removeClass('d-none');
			$(this).addClass('d-none');
		});

		//收藏
		$('#add-favorites-btn').click(function () {
			if (!isLogin) {
				$('#alert-container').load('/Search/Alert', {
					Color: 'danger',
					AlertText: '請登入會員!!',
					Show: true,
					Time: 1000
				});
			}
			else {
				// console.log("memberID= ", memberID, roomID, roomTitle);
				//加入收藏功能
				$.ajax({
					url: '@Url.Action("FavoriteRoom", "Member")',
					type: "POST",
					data: { roomID: roomID, memberID: memberID },
					success: function (response) {
						console.log(response.message, response.state);
						$('#add-favorites-btn').addClass('d-none');
						$('#remove-favorites-btn').removeClass('d-none');
						$('#alert-container').load('/Search/Alert', {
							Color: 'success',
							AlertText: '收藏成功!!',
							Show: true,
							Time: 1000
						});
					},
					error: ajaxError
				});
			}
		});
		$('#remove-favorites-btn').click(function () {
			// console.log("memberID= ", memberID, roomID, roomTitle);
			$.ajax({
				url: '@Url.Action("RemoveFavoriteRoom", "Member")',
				type: "POST",
				data: { roomID: roomID, memberID: memberID },
				success: function (response) {
					console.log(response.message, response.state);
					$('#remove-favorites-btn').addClass('d-none');
					$('#add-favorites-btn').removeClass('d-none');
					$('#alert-container').load('/Search/Alert', {
						Color: 'success',
						AlertText: `已移除收藏!!`,
						Show: true,
						Time: 1000
					});
				},
				error: ajaxError
			});
		});

		//房間設備 環境公設
		function checkDevice() {
			console.log("checkDevice_roomID= ", roomID);
			$.ajax({
				url: '@Url.Action("GetRoomDevice", "Search")',
				type: 'POST',
				data: { roomID: roomID },
				success: function (response) {
					if (response.state) {
						const device = {
							'bed': response.data.bed,
							'wardrobe': response.data.wardrobe,
							'room_table': response.data.room_table,
							'chair': response.data.chair,
							'kitchen': response.data.kitchen,
							'private_washer': response.data.private_washer,
							'extinguisher': response.data.extinguisher,
							'tv': response.data.tv,
							'wifi': response.data.wifi,
							'monitor': response.data.monitor,
							'balcony': response.data.balcony,
							'elevator': response.data.elevator,
							'public_washer': response.data.public_washer,
							'trash_cart': response.data.trash_cart,
							'keep_pet': response.data.keep_pet,
							'smoking': response.data.smoking
						};
						$.each(device, function (index, value) {
							if (!value) {
								$('#' + index).find('span').addClass('noDevice');
								$('#' + index).find('.room-text').removeClass('room-text');
								$('#' + index).find('span').removeClass('text-success');
							}
						});
					}
				},
				error: ajaxError
			});
		}
		function checkFavoriteRoom() {
			$.ajax({
				url: '@Url.Action("checkFavoriteRoom", "partialView")',
				type: 'POST',
				data: { memberID: memberID },
				success: function (response) {
					if (response.includes(@Model.Room?.room_id)) {
						$('#add-favorites-btn').addClass('d-none');
						$('#remove-favorites-btn').removeClass('d-none');
					}
				},
				error: ajaxError
			});
		}

		//圖片點擊
		$('.messageArea').on('click', '.user-shot', function () {
			let parentClass = $(this).closest('.messageItem').attr('class');
			let memberID = parentClass.match(/member-(\d+)/)?.[1]; //match 為 null，也不會報錯
			console.log("check memberID=", memberID);
			$.ajax({
				url: '/Search/MessageMember',
				type: 'POST',
				data: { memberID: memberID },
				success: function (html) {
					$('#PartialMemberModal').html(html);
					$('#MemberModal').modal('show');
				},
				error: ajaxError
			});
		});
		//名字點擊
		$('.messageArea').on('click', '.member-name', function () {
			let parentClass = $(this).closest('.messageItem').attr('class');
			let memberID = parentClass.match(/member-(\d+)/)?.[1]; 
			$.ajax({
				url: '/Search/MessageMember',
				type: 'POST',
				data: { memberID: memberID },
				success: function (html) {
					$('#PartialMemberModal').html(html);
					$('#MemberModal').modal('show');
				},
				error: ajaxError
			});
		});
		//點擊已回覆樓層
		$('.messageArea').on('click', '#reply-member-name', function () {
			const replyText = $(this).text().trim();
			// console.log("replyText=", replyText);
			const replyBasementRegex = replyText.match(/^B(\d+)\(/);
			const replyBasement = replyBasementRegex[1];
			// console.log(replyBasement, "roomID=", roomID);
			$.ajax({
				url: '/Search/PostReplyBasement',
				type: 'POST',
				data: { replyBasement: replyBasement, roomID: roomID },
				success: function (html) {
					$('#PartialReplyModal').html(html);
					$('#ReplyModal').modal('show');
				},
				error: ajaxError
			});
		});
		//抓時間
		function getMessageTime() {
			const Time = new Date();
			const messageTime = Time.toLocaleString('zh-TW', {
				year: 'numeric',
				month: '2-digit',
				day: '2-digit',
				hour: '2-digit',
				minute: '2-digit',
				hour12: false, // 24小時制
				timeZone: 'Asia/Taipei',
			});
			return messageTime;
		}

		async function disableFavoriteAndShareRoom() {
			try {
				const response = await $.ajax({
					url: '/Search/disableFavoriteAndShareRoom',
					type: 'POST',
					data: { roomID: roomID }
				});
				// console.log("ajax房間編號對應當前登入會員", response.getMemberID);
				return response.getMemberID;
			}
			catch (error) {
				console.error("Ajax錯誤:", error);
				throw error;
			}
		}

		//抓取當下時間---------------------------------------
		const today = new Date();
		//把 Date 物件轉換為 ISO 8601 格式的字串，並提取[0]的位置資料(只會有前半段「2024-11-24」這種檔案格式)
		const formattedDate = today.toISOString().split('T')[0];


		//找到該房間的刊登會員(用以發送通知)-------------------
		function getRoomPublisherId(roomID, memberID, formattedDate) {
			$.ajax({
				url: '/Room/GetPublisher',
				type: 'POST',
				contentType: 'application/json',
				data: JSON.stringify({ RoomID: roomID }),
				success: function (data) {
					console.log("伺服器回傳資料:", data);
					console.log("房間ID:", roomID);

					// 檢查是否存在 PublisherId 並進行處理
					if (data && data.publisherId !== undefined && data.publisherId !== null) {
						console.log("該房間的會員 ID (刊登者):", data.publisherId);
						console.log("登入的會員 ID:", memberID);
						console.log("當前日期:", formattedDate);

						// 成功獲取到 publisherId，發送資料到後端
						sendInviteNotification(memberID, data.publisherId, formattedDate);
					} else {
						console.error("伺服器回傳的資料格式不正確，未找到 publisherId");
					}
				},
				error: function (xhr, status, error) {
					if (xhr.status === 404) {
						console.error("房間不存在或無會員資料");
					} else {
						console.error("無法取得該房間的會員 ID:", error);
					}
				}
			});
		}


		//送出通知邀請---------------------------------------
		// 修改 sendInviteNotification 函數，傳遞符合 InviteRequest 的資料
		function sendInviteNotification(inviterId, inviteeId) {
			var data = {
				InviterMemberId: inviterId,
				InviteeMemberId: inviteeId,
				NotifyStatus: "待處理",  // 根據需求設置
				IsFinalized: false,      // 設置為 false
				NotifyDate: new Date()   // 使用當前日期
			};

			$.ajax({
				url: '/Invite/SendInviteNotification',
				type: 'POST',
				contentType: 'application/json',
				data: JSON.stringify(data),
				success: function (response) {
					console.log("邀約通知發送成功:", response);

					$('#alert-container').load('/Search/Alert', {
						Color: 'success',
						AlertText: '已發出合租邀約!!',
						Show: true,
						Time: 1000
					});
				},
				error: function (xhr, status, error) {
					console.error("發送邀約通知時發生錯誤:", error);
				}
			});
		}


		//合租
		$('#invite-room-btn').click(function () {
			if (!isLogin) {
				// 如果未登入，顯示警告
				$('#alert-container').load('/Search/Alert', {
					Color: 'danger',
					AlertText: '請登入會員!!',
					Show: true,
					Time: 1000
				});
			} else {
				console.log("登入的會員 ID:", memberID);
				console.log("該房間ID:", roomID);
				console.log("當前日期:", formattedDate);

				// 檢查是否為房間發布者
				checkRoomPublisher(memberID, function (isPublisher) {
					if (isPublisher) {
						// 如果是房間發布者，顯示警告訊息
						$('#alert-container').load('/Search/Alert', {
							Color: 'danger',
							AlertText: '您已刊登房間，不能對其他用戶發出邀約喔！',
							Show: true,
							Time: 2500
						});
					} else {
						// 如果不是房間發布者，執行邀約操作
						getRoomPublisherId(roomID, memberID, formattedDate);
					}
				});
			}
		});
		function checkRoomPublisher(memberID, callback) {
			$.ajax({
				url: '@Url.Action("GetRoomMemberID", "Search")',
				type: 'POST',
				data: { memberID: memberID },
				success: function (response) {
					callback(response.success); // 傳遞是否有刊登房間的結果
				},
				error: ajaxError
			});
		}
		//通用錯誤函式
		function ajaxError(response, xhr, status, error) {
			try {
				console.error("伺服器錯誤:", response.message || "未提供錯誤訊息");
				console.error("詳細錯誤:", response.error || "未提供詳細錯誤訊息");
				console.error("內部例外:", response.innerException || "無內部例外");
				console.error("堆疊追蹤:", response.stackTrace || "無堆疊追蹤");
				console.error("調試資訊:", response.debugInfo || "無調試資訊");
			} catch (e) {
				console.error("未預期的伺服器錯誤:", xhr.responseText || xhr.statusText || "無響應文本");
			}
			console.log("AJAX 狀態:", status || "未知狀態");
			console.log("AJAX 錯誤:", error || "未知錯誤");
		}

		function resetInputMessage() {
			$('#inputMessage').off('input');
			$('#inputMessage').val('');
		}
		//$(function ()	結束
	});
</script>
